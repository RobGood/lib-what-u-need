{
   "README" : "<em>This</em> is a PURL server.",
   "_dateCreated" : "Thu Nov  3 13:19:30 2011",
   "_useCount" : 243,
   "api" : {
      "url-get" : "(fn ( -- key redir-url)\n  (= key (join / $req-arg))\n  (= redir-url\n    (dbm-atomic purl-db {mode r}\n      (hash-get $dbm / $key)))\n\n  (redirect-to $redir-url $url))",
      "url-set" : "(fn ()\n  (report 'orig-url: %s, redir-url: %s' $orig-url $redir-url)\n  (dbm-atomic purl-db {mode rw}\n    (if (eq '' $redir-url)\n    (hash-clear $dbm / $orig-url)\n        (hash-set   $dbm / $orig-url $redir-url)))\n\n  (usage))"
   },
   "api-entry-points" : "{\n   GET/       usage\n   GET/_      get-purl\n   GET/~arg*  get-purl\n  POST/~arg*  add-purl\n}",
   "api-handlers" : {
      "add-purl" : "(= url (sprintf '%s%s%s'\n         (join / $req-arg)\n         (if (list-len $req-path-list) / '')\n         (join / $req-path-list)))\n\n(= key (join / $req-arg))\n\n(= redir-url (shift (desc-from-string $request-content)))\n\n(dbm-atomic purl-db {mode rw}\n  (hash-set $dbm / $key $redir-url))\n\n(reply-json {msg ok.})",
      "get-purl" : "(= $query-hash)\n(report-vars orig-url redir-url)\n\n(if (&& (defined? $orig-url) (defined? $redir-url))\n  (url-set)\n  (url-get)\n)",
      "usage" : "(usage)"
   },
   "html" : {
      "html-section-API" : "(fn () [\n  (html-h 2 'API')\n  (html-ul\n    '<table border=\"0\" cellspacing=\"5\" cellpadding=\"1\">'\n      <tr> <td>  GET </td>\n           <td> \"<tt>$base-url</tt>/\"                     </td>\n           <td> 'This page.'</td> </tr>\n      <tr> <td> POST </td>\n           <td> \"<tt>$base-url</tt>/<i>SomeTokenHere</i>\" </td>\n           <td> 'Stores first string in POST\\'d JSON array as the URL for redirection.'</td> </tr>\n      <tr> <td>  GET </td>\n           <td> \"<tt>$base-url</tt>/<i>SomeTokenHere</i>\" </td>\n           <td> 'Redirects to the stored URL.'</td> </tr>\n    </table>\n  )\n])",
      "html-section-add-purl" : "(fn () [\n  (html-h 2 'Add a PURL')\n  (html-ul\n   '<form action=\"/api/dplx/purl/_\" method=\"GET\">'\n    'make this PURL: ' (html-link \"$base-url/\")\n    \"<input type='text' name='orig-url'  value='$orig-url' size='32'/>\"<br/>\n    'redirect to: '\n    \"<input type='text' name='redir-url' value='$redir-url' size='70'/>\"<br/>\n    '<input type=\"submit\" value=\"Add PURL\"/>'\n   </form>)\n])",
      "html-section-delete-purl" : "(fn ()\n  (if (list-len $known-purls) [\n    (html-h 2 'Delete a PURL')\n    (html-ul\n     '<form action=\"/api/dplx/purl/_\" method=\"GET\">'\n      'delete this PURL: ' (html-link \"$base-url/\")\n      \"<input type='text' name='orig-url'  value='$orig-url' size='30'/>\"<br/>\n      \"<input type='hidden' name='redir-url' value=''/>\"\n      '<input type=\"submit\" value=\"Delete PURL\"/>'\n     </form>)\n  ])\n)",
      "html-section-known-purls" : "(fn (purls)\n  (if (list-len $known-purls)\n    [\n      (html-h 2 'Known PURLs')\n      (html-ol\n        (foreach purl $purls\n          (html-li (html-link \"http://$host/api/dplx/purl/$purl\"))))\n    ]\n    (html-h 2 'No PURLs')\n  )\n)"
   },
   "main" : "(fn ())",
   "on-load" : "(fn ()\n  (desc-read _ HTML-macros)\n  (desc-read _ HTML-macros-what-u-need)\n\n  (def-hash-fn $self {\n    / [\n      usage\n    ]\n\n    /api [\n      url-set\n      url-get\n    ]\n\n    /html [\n      html-section-API\n      html-section-add-purl\n      html-section-delete-purl\n      html-section-known-purls\n    ]\n  })\n\n  (= base-url (sprintf http://%s/api/dplx/%s $host $self/name))\n  (= app-title 'PURL server')\n)",
   "rcs-id" : "$Id: purl,v 1.248 2013/04/19 20:46:58 apache Exp apache $",
   "request-from-client" : {
      "schema" : {
         "HTTP" : {
            "GET" : {
               ".on-match." : "(hash-eval $self /api-handlers usage)",
               "_" : {
                  ".on-match." : "(hash-eval $self /api-handlers get-purl)"
               },
               "~arg*" : {
                  ".on-match." : "(hash-eval $self /api-handlers get-purl)"
               }
            },
            "POST" : {
               "~arg*" : {
                  ".on-match." : "(hash-eval $self /api-handlers add-purl)"
               }
            }
         }
      }
   },
   "usage" : "(fn ( -- known-purls edit-view-url edit-view-label)\n  (= known-purls (catch (dbm-atomic purl-db {mode r} (hash-keys $dbm)) []))\n  (= known-purls (sort-alpha $known-purls))\n  (= edit-view-url   /api/dple/wall?_workspaceName=/lib-what-u-need)\n  (= edit-view-label (if (defined? $userid) edit view))\n\n  (reply-html (html-app-template\n    (html-utility-heading '<em>This</em> is a PURL server!'[\n      ...\n      (bracket-link (html-link $edit-view-url \"$edit-view-label app source\"))\n    ])\n\n    (html-section-API)\n    (html-section-known-purls $known-purls)\n    (html-section-add-purl)\n    (html-section-delete-purl)\n  ))\n)"
}
